{"ast":null,"code":"import axiosInstance from \"../utils/axiosInstance\";\n\n// user registration\nexport const registerUser = async userData => {\n  const response = await axiosInstance.post(\"/api/users/register\", userData);\n  return response.data;\n};\n\n// user login\nexport const loginUser = async loginData => {\n  const response = await axiosInstance.post(\"/api/users/login\", loginData);\n  if (response.data.token) {\n    localStorage.setItem(\"token\", response.data.token);\n  }\n  return response.data;\n};\n\n// get all properties\nexport const getProperties = async () => {\n  const response = await axiosInstance.get(\"/api/properties\");\n  return response.data;\n};\n\n// get property by id\nexport const getPropertyById = async propertyId => {\n  const response = await axiosInstance.get(`/api/properties/${propertyId}`);\n  return response.data;\n};\n\n// create new properties\nexport const createProperty = async propertyData => {\n  const response = await axiosInstance.post(\"/api/properties\", propertyData);\n  return response.data;\n};\n\n// update properties\nexport const updateProperty = async (propertyId, propertyData) => {\n  const response = await axiosInstance.put(`/api/properties/${propertyId}`, propertyData);\n  return response.data;\n};\n\n// delete properties by id\nexport const deleteProperty = async propertyId => {\n  const response = await axiosInstance.delete(`/api/properties/${propertyId}`);\n  return response.data;\n};\n\n// search and filter properties\nexport const searchProperties = async searchParams => {\n  const response = await axiosInstance.get(\"/api/properties/search\", {\n    params: searchParams\n  });\n  return response.data;\n};\n\n// upload image\nexport const uploadImage = async imageData => {\n  const response = await axiosInstance.post(\"/api/uploads\", imageData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n  return response.data;\n};\n\n// book a property\nexport const bookProperty = async bookingData => {\n  const response = await axiosInstance.post(\"/api/bookings\", bookingData);\n  return response.data;\n};\n\n// fetch user profile\nexport const getUserProfile = async userId => {\n  const response = await axiosInstance.get(`/api/users/${userId}`);\n  return response.data;\n};\n\n// update user profile\nexport const updateUserProfile = async (userId, userData) => {\n  const response = await axiosInstance.put(`/api/users/${userId}`, userData);\n  return response.data;\n};\n\n// fetch user bookings\nexport const getUserBookings = async userId => {\n  const response = await axiosInstance.get(`/api/bookings/user/${userId}`);\n  return response.data;\n};\n\n// fetch bookings for a property owner\nexport const getOwnerBookings = async ownerId => {\n  const response = await axiosInstance.get(`/api/bookings/owner/${ownerId}`);\n  return response.data;\n};\n\n// approve a booking (for a property owner)\nexport const approveBooking = async bookingId => {\n  const response = await axiosInstance.put(`/api/bookings/approve/${bookingId}`);\n  return response.data;\n};\n\n// reject a booking (for a property owner)\nexport const rejectBooking = async bookingId => {\n  const response = await axiosInstance.put(`/api/bookings/reject/${bookingId}`);\n  return response.data;\n};","map":{"version":3,"names":["axiosInstance","registerUser","userData","response","post","data","loginUser","loginData","token","localStorage","setItem","getProperties","get","getPropertyById","propertyId","createProperty","propertyData","updateProperty","put","deleteProperty","delete","searchProperties","searchParams","params","uploadImage","imageData","headers","bookProperty","bookingData","getUserProfile","userId","updateUserProfile","getUserBookings","getOwnerBookings","ownerId","approveBooking","bookingId","rejectBooking"],"sources":["C:/Users/user/Documents/shelter/frontend/src/services/api.js"],"sourcesContent":["import axiosInstance from \"../utils/axiosInstance\";\r\n\r\n// user registration\r\nexport const registerUser = async (userData) => {\r\n    const response = await axiosInstance.post(\"/api/users/register\", userData);\r\n    return response.data;\r\n};\r\n\r\n// user login\r\nexport const loginUser = async (loginData) => {\r\n    const response = await axiosInstance.post(\"/api/users/login\", loginData);\r\n    if (response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n    }\r\n    return response.data;\r\n};\r\n\r\n// get all properties\r\nexport const getProperties = async () => {\r\n    const response = await axiosInstance.get(\"/api/properties\");\r\n    return response.data;\r\n};\r\n\r\n// get property by id\r\nexport const getPropertyById = async (propertyId) => {\r\n    const response = await axiosInstance.get(`/api/properties/${propertyId}`);\r\n    return response.data;\r\n};\r\n\r\n// create new properties\r\nexport const createProperty = async (propertyData) => {\r\n    const response = await axiosInstance.post(\"/api/properties\", propertyData);\r\n    return response.data;\r\n};\r\n\r\n// update properties\r\nexport const updateProperty = async (propertyId, propertyData) => {\r\n    const response = await axiosInstance.put(`/api/properties/${propertyId}`, propertyData);\r\n    return response.data;\r\n};\r\n\r\n// delete properties by id\r\nexport const deleteProperty = async (propertyId) => {\r\n    const response = await axiosInstance.delete(`/api/properties/${propertyId}`);\r\n    return response.data;\r\n};\r\n\r\n// search and filter properties\r\nexport const searchProperties = async (searchParams) => {\r\n    const response = await axiosInstance.get(\"/api/properties/search\", { params: searchParams });\r\n    return response.data;\r\n};\r\n\r\n// upload image\r\nexport const uploadImage = async (imageData) => {\r\n    const response = await axiosInstance.post(\"/api/uploads\", imageData, {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\n// book a property\r\nexport const bookProperty = async (bookingData) => {\r\n    const response = await axiosInstance.post(\"/api/bookings\", bookingData);\r\n    return response.data;\r\n};\r\n\r\n// fetch user profile\r\nexport const getUserProfile = async (userId) => {\r\n    const response = await axiosInstance.get(`/api/users/${userId}`);\r\n    return response.data;\r\n};\r\n\r\n// update user profile\r\nexport const updateUserProfile = async (userId, userData) => {\r\n    const response = await axiosInstance.put(`/api/users/${userId}`, userData);\r\n    return response.data;\r\n};\r\n\r\n// fetch user bookings\r\nexport const getUserBookings = async (userId) => {\r\n    const response = await axiosInstance.get(`/api/bookings/user/${userId}`);\r\n    return response.data;\r\n};\r\n\r\n// fetch bookings for a property owner\r\nexport const getOwnerBookings = async (ownerId) => {\r\n    const response = await axiosInstance.get(`/api/bookings/owner/${ownerId}`);\r\n    return response.data;\r\n};\r\n\r\n// approve a booking (for a property owner)\r\nexport const approveBooking = async (bookingId) => {\r\n    const response = await axiosInstance.put(`/api/bookings/approve/${bookingId}`);\r\n    return response.data;\r\n};\r\n\r\n// reject a booking (for a property owner)\r\nexport const rejectBooking = async (bookingId) => {\r\n    const response = await axiosInstance.put(`/api/bookings/reject/${bookingId}`);\r\n    return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}