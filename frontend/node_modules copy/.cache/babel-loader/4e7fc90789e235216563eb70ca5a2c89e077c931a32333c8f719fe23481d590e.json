{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\shelter\\\\frontend\\\\src\\\\Property\\\\PropertyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { searchProperties } from \"../services/api\";\nimport Search from \"./search\";\nimport Filter from \"./filter\";\nimport PropertyCard from \"./PropertyCard\";\nimport \"./PropertyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyList = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n  useEffect(() => {\n    const getPropertiesList = async () => {\n      const searchParams = {\n        search: searchTerm,\n        country,\n        state,\n        city,\n        min_price: minPrice,\n        max_price: maxPrice\n      };\n      try {\n        const properties = await searchProperties(searchParams);\n        setProperties(properties);\n      } catch (error) {\n        console.error(\"Failed to get properties:\", error);\n      }\n    };\n    getPropertiesList();\n  }, [searchTerm, country, state, city, minPrice, maxPrice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Property Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      country: country,\n      setCountry: setCountry,\n      state: state,\n      setState: setState,\n      city: city,\n      setCity: setCity,\n      minPrice: minPrice,\n      setMinPrice: setMinPrice,\n      maxPrice: maxPrice,\n      setMaxPrice: setMaxPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-list grid-container\",\n      children: properties.map(property => /*#__PURE__*/_jsxDEV(PropertyCard, {\n        property: property\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyList, \"eq2D0CPOqvvsPxHT9S2neHlJfPI=\");\n_c = PropertyList;\nexport default PropertyList;\nvar _c;\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"names":["React","useState","useEffect","Link","searchProperties","Search","Filter","PropertyCard","jsxDEV","_jsxDEV","PropertyList","_s","properties","setProperties","searchTerm","setSearchTerm","country","setCountry","state","setState","city","setCity","minPrice","setMinPrice","maxPrice","setMaxPrice","getPropertiesList","searchParams","search","min_price","max_price","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","property","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/shelter/frontend/src/Property/PropertyList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { searchProperties } from \"../services/api\";\r\nimport Search from \"./search\";\r\nimport Filter from \"./filter\";\r\nimport PropertyCard from \"./PropertyCard\";\r\nimport \"./PropertyList.css\";\r\n\r\nconst PropertyList = () => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [minPrice, setMinPrice] = useState(\"\");\r\n  const [maxPrice, setMaxPrice] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getPropertiesList = async () => {\r\n      const searchParams = {\r\n        search: searchTerm,\r\n        country,\r\n        state,\r\n        city,\r\n        min_price: minPrice,\r\n        max_price: maxPrice,\r\n      };\r\n      try {\r\n        const properties = await searchProperties(searchParams);\r\n        setProperties(properties);\r\n      } catch (error) {\r\n        console.error(\"Failed to get properties:\", error);\r\n      }\r\n    };\r\n    getPropertiesList();\r\n  }, [searchTerm, country, state, city, minPrice, maxPrice]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Property Listings</h1>\r\n      <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n      <Filter\r\n        country={country}\r\n        setCountry={setCountry}\r\n        state={state}\r\n        setState={setState}\r\n        city={city}\r\n        setCity={setCity}\r\n        minPrice={minPrice}\r\n        setMinPrice={setMinPrice}\r\n        maxPrice={maxPrice}\r\n        setMaxPrice={setMaxPrice}\r\n      />\r\n      <div className=\"property-list grid-container\">\r\n        {properties.map((property) => (\r\n          <PropertyCard key={property.id} property={property} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}